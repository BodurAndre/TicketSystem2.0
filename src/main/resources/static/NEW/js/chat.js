// –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ —Å–∫—Ä–∏–ø—Ç–∞
(function() {
    'use strict';
    
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —á–∞—Ç–∞
    let messages = [];
    let partners = [];
    let activeChats = new Set(); // –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤
    let savedPartners = []; // –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø–∞—Ä—Ç–Ω–µ—Ä—ã –∏–∑ localStorage
    let currentUser = null;
    let currentPartner = null;
    let isSendingMessage = false; // –§–ª–∞–≥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    let messagePollingInterval = null; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
    let lastMessageCheck = null; // –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —á–∞—Ç–∞
async function initializeChat() {
    console.log('üöÄ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ß–ê–¢–ê –ù–ê–ß–ê–õ–ê–°–¨');
    
    try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        console.log('üë§ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ...');
        await loadCurrentUserInfo();
        
        if (!currentUser) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ');
            return;
        }
        
        console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', currentUser);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤
        console.log('üë• –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤...');
        await loadConversationPartners();
        
        console.log('‚úÖ –°–ø–∏—Å–æ–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω:', partners.length, '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        console.log('üì¨ –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...');
        await loadUnreadMessages();
        
        console.log('‚úÖ –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        console.log('üëã –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...');
        showWelcomeMessage();
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
        console.log('üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç —Å –ø–µ—Ä–≤—ã–º –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º...');
        await openFirstActiveChat();
        
        console.log('üéâ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ß–ê–¢–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —á–∞—Ç–∞:', error);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
async function loadCurrentUserInfo() {
    try {
        const response = await fetch('/api/user/current');
        if (response.ok) {
            currentUser = await response.json();
            console.log('‚úÖ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω:', currentUser);
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', response.status);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤
async function loadConversationPartners() {
    try {
        console.log('üìã –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤...');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const response = await fetch('/api/users/all');
        if (!response.ok) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', response.status);
            return;
        }
        
        const allUsers = await response.json();
        console.log('üìä –ó–∞–≥—Ä—É–∂–µ–Ω—ã –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:', allUsers.length);
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const filteredUsers = allUsers.filter(user => user.id !== currentUser.id);
        console.log('üîç –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–∏—Å–∫–ª—é—á–µ–Ω —Ç–µ–∫—É—â–∏–π):', filteredUsers.length);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø–∞—Ä—Ç–Ω–µ—Ä—ã –∏–∑ localStorage
        loadSavedPartnersFromStorage();
        
        // –û–±—ä–µ–¥–∏–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏
        const allPartners = [...filteredUsers];
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ
        savedPartners.forEach(savedPartner => {
            if (!allPartners.find(partner => partner.id === savedPartner.id)) {
                allPartners.push(savedPartner);
            }
        });
        
        console.log('üë• –ò–¢–û–ì–û –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤:', allPartners.length);
        
        // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã
        await validateActiveChats(allPartners);
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ (–∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã –≤–≤–µ—Ä—Ö—É)
        partners = allPartners.sort((a, b) => {
            const aHasActiveChat = activeChats.has(a.id);
            const bHasActiveChat = activeChats.has(b.id);
            
            if (aHasActiveChat && !bHasActiveChat) return -1;
            if (!aHasActiveChat && bHasActiveChat) return 1;
            return 0;
        });
        
        console.log('üìã –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã –≤–≤–µ—Ä—Ö—É):', partners);
        
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤
        renderConversationPartners();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã
        showActiveChats();
        
        console.log('‚úÖ –°–ø–∏—Å–æ–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω:', partners.length, '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤:', error);
    }
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤
async function validateActiveChats(users) {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...');
    
    const validActiveChats = new Set();
    
    for (const partnerId of activeChats) {
        try {
            const response = await fetch(`/api/chat/conversation/${partnerId}`);
            if (response.ok) {
                const messages = await response.json();
                if (messages.length > 0) {
                    validActiveChats.add(partnerId);
                    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${partnerId} –∏–º–µ–µ—Ç ${messages.length} —Å–æ–æ–±—â–µ–Ω–∏–π`);
                } else {
                    console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${partnerId} –Ω–µ –∏–º–µ–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π`);
                }
            }
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${partnerId}:`, error);
        }
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã
    activeChats = validActiveChats;
    saveActiveChatsToStorage();
    
    console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û—Å—Ç–∞–ª–æ—Å—å:', Array.from(activeChats));
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤
function renderConversationPartners() {
    const usersList = document.getElementById('users-list');
    if (!usersList) {
        console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç users-list –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    usersList.innerHTML = '';
    
    console.log('üé® –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏');
    console.log('üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:', partners.length);
    
    partners.forEach(partner => {
        const hasActiveChat = activeChats.has(partner.id);
        const userItem = document.createElement('div');
        userItem.className = 'user-item';
        userItem.setAttribute('data-partner-id', partner.id);
        userItem.onclick = () => openConversation(partner);
        
        userItem.innerHTML = `
            <div class="user-avatar">
                <i class="fas fa-user"></i>
                ${hasActiveChat ? '<div class="active-chat-indicator"></div>' : ''}
            </div>
            <div class="user-info">
                <h4>${partner.firstName} ${partner.lastName}</h4>
                <p>${partner.email}</p>
            </div>
        `;
        
        usersList.appendChild(userItem);
        console.log(`üë§ –î–æ–±–∞–≤–ª–µ–Ω –≤ –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å: ${partner.firstName} ${partner.lastName} (–∞–∫—Ç–∏–≤–Ω—ã–π: ${hasActiveChat})`);
    });
    
    console.log('‚úÖ –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞ —Å', partners.length, '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏');
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
async function openConversation(partner) {
    console.log('üîÑ –û–¢–ö–†–´–¢–ò–ï –†–ê–ó–ì–û–í–û–†–ê');
    console.log('üë§ –ü–∞—Ä—Ç–Ω–µ—Ä:', partner);
    console.log('üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', currentUser);
    
    // –ï—Å–ª–∏ —ç—Ç–æ —É–∂–µ —Ç–µ–∫—É—â–∏–π –ø–∞—Ä—Ç–Ω–µ—Ä, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è
    if (currentPartner && currentPartner.id === partner.id) {
        console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç—ã–π —á–∞—Ç');
        updateChatUI();
        return;
    }
    
    currentPartner = partner;
    console.log('‚úÖ currentPartner —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', currentPartner.id);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã
    addActiveChat(partner.id);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –≤ —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç
    const existingElement = document.querySelector(`[data-partner-id="${partner.id}"]`);
    if (!existingElement) {
        addPartnerToList(partner);
    } else {
        // –î–µ–ª–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç
        document.querySelectorAll('.user-item').forEach(item => item.classList.remove('active'));
        existingElement.classList.add('active');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    updateChatUI();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    console.log('üì¨ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π...');
    await loadMessages(partner.id);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    startMessagePolling();
    
    // –û—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ
    console.log('‚úÖ –û—Ç–º–µ—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ...');
    await markConversationAsRead();
    
    console.log('üéâ –†–∞–∑–≥–æ–≤–æ—Ä –æ—Ç–∫—Ä—ã—Ç —É—Å–ø–µ—à–Ω–æ!');
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI —á–∞—Ç–∞
function updateChatUI() {
    const chatWelcome = document.getElementById('chat-welcome');
    const chatArea = document.getElementById('chat-area');
    const partnerName = document.getElementById('partner-name');
    
    if (chatWelcome) chatWelcome.style.display = 'none';
    if (chatArea) chatArea.style.display = 'flex';
    if (partnerName && currentPartner) {
        partnerName.textContent = `${currentPartner.firstName.toUpperCase()} ${currentPartner.lastName.toUpperCase()}`;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–∫–µ
    document.querySelectorAll('.user-item').forEach(item => item.classList.remove('active'));
    const activeItem = document.querySelector(`[data-partner-id="${currentPartner.id}"]`);
    if (activeItem) activeItem.classList.add('active');
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async function loadMessages(partnerId) {
    try {
        console.log('üì¨ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', partnerId);
        const response = await fetch(`/api/chat/conversation/${partnerId}`);
        
        if (response.ok) {
            messages = await response.json();
            console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è:', messages.length, '—à—Ç.');
            renderMessages();
            scrollToBottom();
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:', response.status);
            messages = [];
            renderMessages();
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
        messages = [];
        renderMessages();
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async function checkForNewMessages() {
    if (!currentPartner) {
        console.log('üì¨ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π');
        return;
    }
    
    try {
        console.log('üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentPartner.id);
        const response = await fetch(`/api/chat/conversation/${currentPartner.id}`);
        
        if (response.ok) {
            const newMessages = await response.json();
            const previousCount = messages.length;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
            if (newMessages.length !== previousCount) {
                console.log('üì¨ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è! –ë—ã–ª–æ:', previousCount, '–°—Ç–∞–ª–æ:', newMessages.length);
                messages = newMessages;
                renderMessages();
                scrollToBottom();
                lastMessageCheck = new Date();
            }
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
function startMessagePolling() {
    console.log('üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π');
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (messagePollingInterval) {
        clearInterval(messagePollingInterval);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
    messagePollingInterval = setInterval(checkForNewMessages, 3000);
    lastMessageCheck = new Date();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
function stopMessagePolling() {
    console.log('‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π');
    
    if (messagePollingInterval) {
        clearInterval(messagePollingInterval);
        messagePollingInterval = null;
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
function renderMessages() {
    const messagesContainer = document.getElementById('messages-container');
    if (!messagesContainer) {
        console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç messages-container –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    messagesContainer.innerHTML = '';
    
    console.log('üé® –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è:', messages.length, '—à—Ç.');
    
    messages.forEach((message, index) => {
        console.log(`üìù –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ ${index + 1}:`, message);
        
        const messageElement = document.createElement('div');
        const isSent = currentUser && currentUser.id ? message.senderId === currentUser.id : false;
        
        messageElement.className = `message ${isSent ? 'sent' : 'received'}`;
        
        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        const messageText = message.message || message.text || message.content || '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ';
        
        const time = message.timestamp ? new Date(message.timestamp).toLocaleTimeString('ru-RU', { 
            hour: '2-digit', 
            minute: '2-digit' 
        }) : new Date().toLocaleTimeString('ru-RU', { 
            hour: '2-digit', 
            minute: '2-digit' 
        });
        
        messageElement.innerHTML = `
            <div class="message-text">${messageText}</div>
            <div class="message-time">${time}</div>
        `;
        
        messagesContainer.appendChild(messageElement);
        console.log(`üìù –°–æ–æ–±—â–µ–Ω–∏–µ ${index + 1}: ${isSent ? '–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' : '–ø–æ–ª—É—á–µ–Ω–æ'} - "${messageText}"`);
    });
    
    console.log('‚úÖ –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã');
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
async function sendMessage() {
    console.log('üöÄ –§–£–ù–ö–¶–ò–Ø sendMessage –í–´–ó–í–ê–ù–ê');
    
    // –ó–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
    if (isSendingMessage) {
        console.log('‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ');
        return;
    }
    
    isSendingMessage = true;
    
    const messageInput = document.getElementById('message-input');
    if (!messageInput) {
        console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç message-input –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }
    
    const messageText = messageInput.value.trim();
    
    if (!messageText) {
        console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è');
        alert('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è!');
        return;
    }
    
    if (!currentPartner) {
        console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: currentPartner –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        alert('–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è!');
        return;
    }
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º CSRF —Ç–æ–∫–µ–Ω
        const csrfResponse = await fetch('/csrf-token');
        const csrfData = await csrfResponse.json();
        const csrfToken = csrfData.token;
        
        console.log('üîê –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–∫–µ–Ω–æ–º:', csrfToken);

        const requestData = {
            recipientId: currentPartner.id,
            message: messageText
        };
        
        console.log('üì§ –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', requestData);
        console.log('üì§ JSON —Å—Ç—Ä–æ–∫–∞:', JSON.stringify(requestData));
        
        const response = await fetch(`/api/chat/send?_csrf=${csrfToken}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': csrfToken,
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify(requestData)
        });
        
        console.log('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è:', response.status);
        
        if (response.ok) {
            console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
            messageInput.value = '';
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã
            addActiveChat(currentPartner.id);
            
            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            await loadMessages(currentPartner.id);
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
            scrollToBottom();
            
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', response.status);
            const errorText = await response.text();
            console.error('üìù –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', errorText);
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    } finally {
        isSendingMessage = false;
        console.log('üîÑ –§–ª–∞–≥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–±—Ä–æ—à–µ–Ω');
    }
}

// –û—Ç–º–µ—Ç–∫–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ
async function markConversationAsRead() {
    if (!currentPartner) return;
    
    try {
        const csrfResponse = await fetch('/csrf-token');
        const csrfData = await csrfResponse.json();
        const csrfToken = csrfData.token;
        
        const response = await fetch(`/api/chat/read/${currentPartner.id}?_csrf=${csrfToken}`, {
            method: 'PUT',
            headers: {
                'X-CSRF-TOKEN': csrfToken,
                'Content-Type': 'application/json'
            }
        });
        
        if (response.ok) {
            console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–º–µ—á–µ–Ω—ã –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ');
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ—Ç–∫–∏ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ:', error);
    }
}

// –ü–æ–∫–∞–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
function showWelcomeMessage() {
    const chatWelcome = document.getElementById('chat-welcome');
    const chatArea = document.getElementById('chat-area');
    
    if (chatWelcome) chatWelcome.style.display = 'flex';
    if (chatArea) chatArea.style.display = 'none';
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    stopMessagePolling();
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async function loadUnreadMessages() {
    try {
        const response = await fetch('/api/chat/unread');
        if (response.ok) {
            const unreadMessages = await response.json();
            console.log('üì¨ –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', unreadMessages);
            
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            showUnreadNotifications(unreadMessages);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
    }
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
function showUnreadNotifications(unreadMessages) {
    // –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è - –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å
    if (unreadMessages.length > 0) {
        console.log('üîî –ï—Å—Ç—å –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', unreadMessages.length);
    }
}

// –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
function scrollToBottom() {
    const messagesContainer = document.getElementById('messages-container');
    if (messagesContainer) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º setTimeout –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
        setTimeout(() => {
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
            console.log('üìú –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
        }, 100);
    }
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–º–∏ —á–∞—Ç–∞–º–∏
function addActiveChat(partnerId) {
    activeChats.add(partnerId);
    saveActiveChatsToStorage();
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç:', partnerId);
}

function saveActiveChatsToStorage() {
    localStorage.setItem('activeChats', JSON.stringify(Array.from(activeChats)));
    console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã –≤ localStorage:', Array.from(activeChats));
}

function loadActiveChatsFromStorage() {
    const saved = localStorage.getItem('activeChats');
    if (saved) {
        activeChats = new Set(JSON.parse(saved));
        console.log('üíæ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã –∏–∑ localStorage:', Array.from(activeChats));
    }
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏
function addPartnerToList(partner) {
    const usersList = document.getElementById('users-list');
    const existingElement = document.querySelector(`[data-partner-id="${partner.id}"]`);
    
    if (!existingElement && usersList) {
        const userItem = document.createElement('div');
        userItem.className = 'user-item';
        userItem.setAttribute('data-partner-id', partner.id);
        userItem.onclick = () => openConversation(partner);
        
        const hasActiveChat = activeChats.has(partner.id);
        
        userItem.innerHTML = `
            <div class="user-avatar">
                <i class="fas fa-user"></i>
                ${hasActiveChat ? '<div class="active-chat-indicator"></div>' : ''}
            </div>
            <div class="user-info">
                <h4>${partner.firstName} ${partner.lastName}</h4>
                <p>${partner.email}</p>
            </div>
        `;
        
        usersList.appendChild(userItem);
        addPartnerToSaved(partner);
    }
}

function addPartnerToSaved(partner) {
    if (!savedPartners.find(p => p.id === partner.id)) {
        savedPartners.push(partner);
        savePartnersToStorage();
    }
}

function savePartnersToStorage() {
    localStorage.setItem('savedPartners', JSON.stringify(savedPartners));
}

function loadSavedPartnersFromStorage() {
    const saved = localStorage.getItem('savedPartners');
    if (saved) {
        savedPartners = JSON.parse(saved);
    } else {
        savedPartners = [];
    }
}

// –ü–æ–∫–∞–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤
function showActiveChats() {
    console.log('‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã –Ω–∞–π–¥–µ–Ω—ã –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏:', Array.from(activeChats));
    console.log('üí° –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∫–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –ª—é–±–æ–π –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è');
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç —Å –ø–µ—Ä–≤—ã–º –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
async function openFirstActiveChat() {
    console.log('üöÄ –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞...');
    
    if (activeChats.size === 0) {
        console.log('üì≠ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è');
        return;
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞
    const firstActivePartner = partners.find(partner => activeChats.has(partner.id));
    
    if (firstActivePartner) {
        console.log('üë§ –ù–∞–π–¥–µ–Ω –ø–µ—Ä–≤—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä:', firstActivePartner.firstName, firstActivePartner.lastName);
        await openConversation(firstActivePartner);
    } else {
        console.log('üë§ –ü–µ—Ä–≤—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤');
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã, –Ω–æ –ø–∞—Ä—Ç–Ω–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–∫—Ä—ã—Ç—å –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π
        if (partners.length > 0) {
            console.log('üîÑ –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞:', partners[0].firstName, partners[0].lastName);
            await openConversation(partners[0]);
        }
    }
}

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function openUserSelectModal() {
    console.log('–û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    
    const modal = document.getElementById('user-select-modal');
    if (modal) {
        modal.style.display = 'block';
        loadAllUsers();
    }
}

function closeUserSelectModal() {
    const modal = document.getElementById('user-select-modal');
    if (modal) {
        modal.style.display = 'none';
    }
}

async function loadAllUsers() {
    try {
        console.log('–ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
        const response = await fetch('/api/users/all');
        
        if (response.ok) {
            const allUsers = await response.json();
            console.log('–ó–∞–≥—Ä—É–∂–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:', allUsers);
            renderAllUsers(allUsers);
        } else {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', response.status);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
    }
}

function renderAllUsers(users) {
    const modalUsersList = document.getElementById('modal-users-list');
    if (!modalUsersList) return;
    
    modalUsersList.innerHTML = '';
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ç–µ—Ö, —Å –∫–µ–º —É–∂–µ –µ—Å—Ç—å —á–∞—Ç
    const filteredUsers = users.filter(user => {
        // –ò—Å–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (currentUser && currentUser.id && user.id === currentUser.id) {
            return false;
        }
        
        // –ò—Å–∫–ª—é—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
        if (activeChats.has(user.id)) {
            return false;
        }
        
        // –ò—Å–∫–ª—é—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤
        if (partners.find(partner => partner.id === user.id)) {
            return false;
        }
        
        return true;
    });
    
    console.log('–û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–∏—Å–∫–ª—é—á–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —á–∞—Ç—ã):', filteredUsers);
    
    if (filteredUsers.length === 0) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const noUsersMessage = document.createElement('div');
        noUsersMessage.className = 'modal-user-item';
        noUsersMessage.style.textAlign = 'center';
        noUsersMessage.style.padding = '40px 20px';
        noUsersMessage.innerHTML = `
            <div style="color: #7f8c8d;">
                <i class="fas fa-info-circle" style="font-size: 24px; margin-bottom: 10px;"></i>
                <p>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞</p>
                <small>–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —á–∞—Ç—ã</small>
            </div>
        `;
        modalUsersList.appendChild(noUsersMessage);
    } else {
        filteredUsers.forEach(user => {
            const userItem = document.createElement('div');
            userItem.className = 'modal-user-item';
            userItem.onclick = () => selectUser(user);
            
            userItem.innerHTML = `
                <div class="modal-user-avatar">
                    <i class="fas fa-user"></i>
                </div>
                <div class="modal-user-info">
                    <h4>${user.firstName} ${user.lastName}</h4>
                    <p>${user.email}</p>
                </div>
            `;
            
            modalUsersList.appendChild(userItem);
        });
    }
}

function selectUser(user) {
    console.log('–í—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —á–∞—Ç —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    const existingPartner = partners.find(partner => partner.id === user.id);
    if (existingPartner) {
        console.log('‚ö†Ô∏è –ß–∞—Ç —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω–µ–≥–æ');
        closeUserSelectModal();
        openConversation(existingPartner);
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    if (activeChats.has(user.id)) {
        console.log('‚ö†Ô∏è –ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
        closeUserSelectModal();
        return;
    }
    
    console.log('‚úÖ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —á–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
    closeUserSelectModal();
    openConversation(user);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π —á–∞—Ç–∞');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π
    document.addEventListener('click', function(e) {
        // –ö–Ω–æ–ø–∫–∞ –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞
        if (e.target && e.target.id === 'new-chat-btn') {
            console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞');
            e.preventDefault();
            openUserSelectModal();
            return;
        }
        
        // –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        if (e.target && (e.target.id === 'send-btn' || e.target.closest('#send-btn'))) {
            console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏');
            e.preventDefault();
            e.stopPropagation();
            sendMessage();
            return;
        }
        
        // –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ
        if (e.target && e.target.id === 'mark-read-btn') {
            console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ—Ç–º–µ—Ç–∫–∏ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ');
            e.preventDefault();
            markConversationAsRead();
            return;
        }
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        if (e.target && e.target.classList.contains('modal')) {
            console.log('–ö–ª–∏–∫ –ø–æ —Ñ–æ–Ω—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
            closeUserSelectModal();
            return;
        }
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è textarea (–æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ Enter)
    document.addEventListener('keydown', function(e) {
        if (e.target && e.target.id === 'message-input' && e.key === 'Enter' && !e.shiftKey) {
            console.log('‚å®Ô∏è Enter –Ω–∞–∂–∞—Ç –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ');
            e.preventDefault();
            sendMessage();
        }
    });
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã—Å–æ—Ç—ã textarea
    document.addEventListener('input', function(e) {
        if (e.target && e.target.id === 'message-input') {
            e.target.style.height = 'auto';
            e.target.style.height = e.target.scrollHeight + 'px';
        }
    });
    
    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ DOM –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
function checkAndInitialize() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ DOM...');
    console.log('üìä document.readyState:', document.readyState);
    console.log('üìä window.location.hash:', window.location.hash);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —á–∞—Ç–∞
    if (window.location.hash !== '#chat') {
        console.log('‚ö†Ô∏è –ú—ã –Ω–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —á–∞—Ç–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é');
        return;
    }

    if (document.readyState === 'loading') {
        console.log('‚è≥ DOM –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –∂–¥–µ–º...');
        document.addEventListener('DOMContentLoaded', initializeChatSystem);
    } else {
        console.log('‚úÖ DOM —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ä–∞–∑—É...');
        setTimeout(initializeChatSystem, 100); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
async function initializeChatSystem() {
    console.log('üöÄ === –ù–ê–ß–ò–ù–ê–ï–ú –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Æ –ß–ê–¢–ê ===');
    
    try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
        console.log('üì¶ –®–∞–≥ 1: –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage...');
        loadActiveChatsFromStorage();
        loadSavedPartnersFromStorage();
        console.log('‚úÖ –®–∞–≥ 1 –∑–∞–≤–µ—Ä—à–µ–Ω');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —á–∞—Ç
        console.log('üéØ –®–∞–≥ 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —á–∞—Ç...');
        await initializeChat();
        console.log('‚úÖ –®–∞–≥ 2 –∑–∞–≤–µ—Ä—à–µ–Ω');
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        console.log('‚öôÔ∏è –®–∞–≥ 3: –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π...');
        setupEventListeners();
        console.log('‚úÖ –®–∞–≥ 3 –∑–∞–≤–µ—Ä—à–µ–Ω');
        
        console.log('üéâ –í–°–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ß–ê–¢–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!');
        
    } catch (error) {
        console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —á–∞—Ç–∞:', error);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
checkAndInitialize();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ CSRF —Ç–æ–∫–µ–Ω–∞
async function testCsrfToken() {
    console.log('üîç === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï CSRF –¢–û–ö–ï–ù–ê ===');
    
    try {
        const csrfResponse = await fetch('/csrf-token');
        console.log('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ /csrf-token:', csrfResponse.status);
        
        if (csrfResponse.ok) {
            const csrfData = await csrfResponse.json();
            console.log('‚úÖ CSRF —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω:', csrfData);
            console.log('üîë –¢–æ–∫–µ–Ω:', csrfData.token);
            console.log('üìã –ó–∞–≥–æ–ª–æ–≤–æ–∫:', csrfData.headerName);
            return csrfData;
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è CSRF —Ç–æ–∫–µ–Ω–∞:', csrfResponse.status);
            return null;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è CSRF —Ç–æ–∫–µ–Ω–∞:', error);
        return null;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
async function testSendMessage() {
    console.log('üß™ === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–¢–ü–†–ê–í–ö–ò –°–û–û–ë–©–ï–ù–ò–Ø ===');
    
    // –°–Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∏—Ä—É–µ–º CSRF —Ç–æ–∫–µ–Ω
    const csrfData = await testCsrfToken();
    if (!csrfData) {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å CSRF —Ç–æ–∫–µ–Ω');
        return;
    }
    
    if (!currentPartner) {
        console.log('‚ùå –ù–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞');
        return;
    }
    
    const testMessage = '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ' + new Date().toLocaleTimeString();
    
    try {
        const response = await fetch(`/api/chat/send?_csrf=${csrfData.token}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': csrfData.token,
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify({
                recipientId: currentPartner.id,
                text: testMessage
            })
        });
        
        console.log('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é –æ—Ç–ø—Ä–∞–≤–∫—É:', response.status);
        
        if (response.ok) {
            console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            await loadMessages(currentPartner.id);
        } else {
            const errorText = await response.text();
            console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏:', response.status, errorText);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
    }
    
    console.log('üß™ === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===');
}

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —á–∞—Ç–∞
    function fixChatStructure() {
        console.log('üîß === –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –ß–ê–¢–ê ===');
        
        const chatMain = document.querySelector('.chat-main');
        const chatArea = document.getElementById('chat-area');
        const chatHeader = document.querySelector('.chat-area .chat-header');
        const messagesContainer = document.getElementById('messages-container');
        const messageInputContainer = document.querySelector('.message-input-container');
        
        console.log('üîß chatMain –Ω–∞–π–¥–µ–Ω:', !!chatMain);
        console.log('üîß chatArea –Ω–∞–π–¥–µ–Ω:', !!chatArea);
        console.log('üîß chatHeader –Ω–∞–π–¥–µ–Ω:', !!chatHeader);
        console.log('üîß messagesContainer –Ω–∞–π–¥–µ–Ω:', !!messagesContainer);
        console.log('üîß messageInputContainer –Ω–∞–π–¥–µ–Ω:', !!messageInputContainer);
        
        // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        if (chatMain) {
            chatMain.style.height = '100%';
            chatMain.style.overflow = 'hidden';
            console.log('üîß ‚úÖ chatMain –∏—Å–ø—Ä–∞–≤–ª–µ–Ω');
        }
        
        if (chatArea) {
            chatArea.style.height = '100%';
            chatArea.style.overflow = 'hidden';
            console.log('üîß ‚úÖ chatArea –∏—Å–ø—Ä–∞–≤–ª–µ–Ω');
        }
        
        if (chatHeader) {
            chatHeader.style.flexShrink = '0';
            chatHeader.style.height = 'auto';
            console.log('üîß ‚úÖ chatHeader –∏—Å–ø—Ä–∞–≤–ª–µ–Ω');
        }
        
        if (messagesContainer) {
            messagesContainer.style.flex = '1';
            messagesContainer.style.height = '0';
            messagesContainer.style.overflowY = 'auto';
            console.log('üîß ‚úÖ messagesContainer –∏—Å–ø—Ä–∞–≤–ª–µ–Ω');
        }
        
        if (messageInputContainer) {
            messageInputContainer.style.flexShrink = '0';
            messageInputContainer.style.height = 'auto';
            messageInputContainer.style.display = 'block';
            messageInputContainer.style.visibility = 'visible';
            console.log('üîß ‚úÖ messageInputContainer –∏—Å–ø—Ä–∞–≤–ª–µ–Ω');
        }
        
        console.log('üîß === –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –ó–ê–í–ï–†–®–ï–ù–û ===');
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–æ–±–∏–ª—å–Ω–æ–π –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    function toggleMobileSidebar() {
        console.log('üì± –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–π –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏');
        
        const sidebar = document.querySelector('.chat-sidebar');
        const chatArea = document.getElementById('chat-area');
        const chatWelcome = document.getElementById('chat-welcome');
        
        if (!sidebar) {
            console.error('‚ùå –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return;
        }
        
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∫–ª–∞—Å—Å mobile-open
        sidebar.classList.toggle('mobile-open');
        
        // –ï—Å–ª–∏ –ø–∞–Ω–µ–ª—å –æ—Ç–∫—Ä—ã—Ç–∞, —Å–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç
        if (sidebar.classList.contains('mobile-open')) {
            console.log('üì± –û—Ç–∫—Ä—ã–≤–∞–µ–º –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å');
            if (chatArea) chatArea.style.display = 'none';
            if (chatWelcome) chatWelcome.style.display = 'none';
        } else {
            console.log('üì± –ó–∞–∫—Ä—ã–≤–∞–µ–º –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å');
            if (chatArea) chatArea.style.display = 'flex';
            if (chatWelcome) chatWelcome.style.display = 'flex';
        }
    }

    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ HTML
    window.openUserSelectModal = openUserSelectModal;
    window.closeUserSelectModal = closeUserSelectModal;
    window.sendMessage = sendMessage;
    window.testCsrfToken = testCsrfToken;
    window.testSendMessage = testSendMessage;
    window.fixChatStructure = fixChatStructure;
    window.toggleMobileSidebar = toggleMobileSidebar;
    window.startMessagePolling = startMessagePolling;
    window.stopMessagePolling = stopMessagePolling;
    window.checkForNewMessages = checkForNewMessages;

})(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º IIFE
